// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  clerkUserId      String   @unique
  email            String   @unique
  name             String?
  imageUrl         String?
  industry         String?
  //link to IndustryInsights
  industryInsight  IndustryInsight? @relation(fields: [industry], references: [industry])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Profile fields
  bio           String?
  experience    Int?
  skills        String[] //array of skills

  assessments   Assessment[]
  resume         Resume?
  coverLetter   CoverLetter[]
}

model Assessment{
  id               String   @id @default(uuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  quizScore        Float    
  questions        Json[]   // Array of question, answer, userAnswer, isCorrect
  category         String   //Technical, Behavioral, etc.
  improvementTip   String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@index([userId])
}

model Resume{
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id])
  content          String   @db.Text //markdown format
  atsScore         Float?
  feedback         String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model CoverLetter{
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id])
  content          String   @db.Text //markdown format
  jobDescription   String? 
  companyName      String
  jobTitle         String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@index([userId])

}

model IndustryInsight{
  id               String   @id @default(cuid())
  industry         String   @unique
  
  //Users in this Industry
  users            User[] 

  //Salary Data
  salaryRanges     Json[] //Array with {role:string, min:float, max:float, median: float, location:string?}

  //Industry Trends
  growthRate       Float  //industry growth rate
  demandLevel      DemandLevel  //enum High, Medium, Low
  topSkills        String[]  //Array of skills in demand

  //Market Conditions
  marketOutlook     MarketOutlook  //enum Positive, Neutral, Negative
  keyTrends         String[] //Array of key trends in the industry

  //Learning suggestions
  learningResources String[] //Array of resources like courses, articles, etc. for that industry

  lastUpdated      DateTime  @default(now())
  nextUpdate       DateTime //When to next update this data

  @@index([industry])
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}

enum MarketOutlook {
  POSITIVE
  NEUTRAL
  NEGATIVE
}